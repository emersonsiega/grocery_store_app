// Mocks generated by Mockito 5.0.16 from annotations
// in grocery_store_app/test/presentation/cubit_login_presenter_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:grocery_store_app/domain/domain.dart' as _i2;
import 'package:grocery_store_app/view/view.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserEntity_0 extends _i1.Fake implements _i2.UserEntity {}

class _FakeAppState_1 extends _i1.Fake implements _i3.AppState {}

/// A class which mocks [UserAuthentication].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserAuthentication extends _i1.Mock
    implements _i2.UserAuthentication {
  MockUserAuthentication() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserEntity> authenticate(
          {String? username, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#authenticate, [],
                  {#username: username, #password: password}),
              returnValue: Future<_i2.UserEntity>.value(_FakeUserEntity_0()))
          as _i4.Future<_i2.UserEntity>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveUserAccount].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveUserAccount extends _i1.Mock implements _i2.SaveUserAccount {
  MockSaveUserAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> save(_i2.UserEntity? entity) =>
      (super.noSuchMethod(Invocation.method(#save, [entity]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [AppPresenter].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppPresenter extends _i1.Mock implements _i3.AppPresenter {
  MockAppPresenter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i3.AppState> get stream => (super.noSuchMethod(
      Invocation.getter(#stream),
      returnValue: Stream<_i3.AppState>.empty()) as _i4.Stream<_i3.AppState>);
  @override
  _i3.AppState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _FakeAppState_1()) as _i3.AppState);
  @override
  _i4.Future<void> loadAppState() =>
      (super.noSuchMethod(Invocation.method(#loadAppState, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void clearAppState() =>
      super.noSuchMethod(Invocation.method(#clearAppState, []),
          returnValueForMissingStub: null);
  @override
  void updateCart(_i2.CartEntity? cart) =>
      super.noSuchMethod(Invocation.method(#updateCart, [cart]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
